It is open source agent created by facebook, it is turn thr operating system into relation database  
it is alow us to ask Os questions using sql 

like return the runnign process , user acoount created etc ...

to enter the interactive mode -->osqueryi
run .help command  to show help in interactive mode  
meta-commands are prefixed with a .

list tables .tables 
list all tbales with spiciifc word  --> .tables user  
kowning the scehma (columns and types) it is very important
to list schema --> .schema table_name  exmaple .schema users 

SQl query syntax -->  seelct col1,col2,col3 from table ;
example --> select username,uid,gid,description from users  ;

display mode  --> use .help to list all display modes  
.mode MODE       Set output mode where MODE is one of:
                   csv      Comma-separated values
                   column   Left-aligned columns see .width
                   line     One value per line
                   list     Values delimited by .separator string
                   pretty   Pretty printed SQL results (default)
                   
 The equal sign is not the only filtering option in a WHERE clause. Below are filtering operators that can be used in a WHERE clause:

    = [equal]
    <>  [not equal]
    >, >= [greater than, greater than, or equal to]
    <, <= [less than or less than or equal to] 
    BETWEEN [between a range]
    LIKE [pattern wildcard searches]
    % [wildcard, multiple characters]
    _ [wildcard, one character]

Matching Wildcard Rules

Below is a screenshot from the Osquery documentation showing examples of using wildcards when used in folder structures:

    %: Match all files and folders for one level.
    %%: Match all files and folders recursively.
    %abc: Match all within-level ending in "abc".
    abc%: Match all within-level starting with "abc".
    
    
    Matching Examples

    /Users/%/Library: Monitor for changes to every user's Library folder, but not the contents within.
    /Users/%/Library/: Monitor for changes to files within each Library folder, but not the contents of their subdirectories.
    /Users/%/Library/%: Same, changes to files within each Library folder.
    /Users/%/Library/%%: Monitor changes recursively within each Library.
    /bin/%sh: Monitor the bin directory for changes ending in sh.
                
Creating SQL  queris 
1- Exploring installed programs 
   SELECT * FROM programs LIMIT 1;
   SELECT name, version, install_location, install_date from programs limit 1;
   SELECT count(*) from programs;
   SELECT * FROM users WHERE username='James';

Joining Tables using JOIN Function
select p.pid, p.name, p.path, u.username from processes p JOIN users u on u.uid=p.uid LIMIT 10;
table stores the evidence of process execution in Windows OS?
userassist
